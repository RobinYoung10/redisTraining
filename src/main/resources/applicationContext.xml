<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--mybatis-spring:scan用来扫描mybatis的dao接口类,这些dao接口不能有spring的注解,否则会因为spring扫描到接口而报错-->
    <mybatis-spring:scan base-package="com.robin.dao" />

    <context:component-scan base-package="com.robin.*" />

    <!--配置redis连接池-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxIdle="50" p:maxTotal="100" p:maxWaitMillis="20000" />

    <!--配置spring提供的redis连接工厂-->
    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="localhost"
          p:port="6379"
          p:poolConfig-ref="poolConfig" />

    <!--JDK序列化器-->
    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

    <!--字符串序列化器-->
    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <!--redisTemplate对象-->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="connectionFactory"
          p:defaultSerializer-ref="stringRedisSerializer"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="jdkSerializationRedisSerializer" />

    <!--redis监听容器,用于监听redis的发布订阅消息-->
    <bean id="topicContainer"
          class="org.springframework.data.redis.listener.RedisMessageListenerContainer"
          destroy-method="destroy"
          p:connectionFactory-ref="connectionFactory">
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
                  p:poolSize="3" />
        </property>
        <property name="messageListeners">
            <map>
                <entry key-ref="redisMsgListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="chat" />
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <!--自定义的redis消息监听类-->
    <bean id="redisMsgListener"
          class="com.robin.listener.RedisMessageListener"
          p:redisTemplate-ref="redisTemplate" />

    <!--配置数据库数据源-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/chapter21"
          p:username="root"
          p:password="robinyoung" />

    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis-config.xml" />

    <!--JDBC事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />

    <!--启用支持annotation注解方式事务管理器-->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--声明缓存使用注解驱动,属性cache-manager默认值为cacheManager-->
    <cache:annotation-driven cache-manager="redisCacheManager" />

    <!--定义缓存管理器,如果使用 id="cacheManager" ,则驱动不需要显式配置cache-manager属性-->
    <bean id="redisCacheManager"
          class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate" />
        <property name="defaultExpiration" value="600" />
        <property name="cacheNames">
            <list>
                <value>redisCacheManager</value>
            </list>
        </property>
    </bean>

</beans>